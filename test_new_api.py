#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö REST API –º–µ—Ç–æ–¥–æ–≤ –≤—Ç–æ—Ä–æ–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞
"""

import requests
import json
import time

# URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)
BASE_URL = "http://localhost:8000"
SUBMIT_DATA_URL = f"{BASE_URL}/submitData/"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞
test_data = {
    "beauty_title": "–ø–µ—Ä. ",
    "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª",
    "other_titles": "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", 
    "connect": "—Å–æ–µ–¥–∏–Ω—è–µ—Ç –¥–æ–ª–∏–Ω—ã –¢–µ—Å—Ç1 –∏ –¢–µ—Å—Ç2",
    "user": {
        "email": "test@example.com",
        "fam": "–¢–µ—Å—Ç–æ–≤", 
        "name": "–¢–µ—Å—Ç",
        "otc": "–¢–µ—Å—Ç–æ–≤–∏—á",
        "phone": "+7 900 000 00 00"
    },
    "coords": {
        "latitude": 45.1234,
        "longitude": 7.5678, 
        "height": 1500
    },
    "level": {
        "winter": "1–ê",
        "summer": "1–ê", 
        "autumn": "1–ê",
        "spring": ""
    },
    "images": []
}

def wait_for_server(max_attempts=30):
    """–û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    for i in range(max_attempts):
        try:
            response = requests.get(BASE_URL, timeout=2)
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
            return True
        except requests.exceptions.RequestException:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {i+1}/{max_attempts}...")
            time.sleep(2)
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    return False

def test_create_pass():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n" + "="*60)
    print("1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–∞–ª–∞ (POST /submitData/)")
    print("="*60)
    
    try:
        response = requests.post(
            SUBMIT_DATA_URL,
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.json()}")
        
        if response.status_code == 200:
            response_data = response.json()
            if response_data.get('status') == 200 and response_data.get('id'):
                print(f"‚úÖ –ü–µ—Ä–µ–≤–∞–ª —Å–æ–∑–¥–∞–Ω —Å ID: {response_data['id']}")
                return response_data['id']
        
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞")
        return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return None

def test_get_pass_by_id(pass_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID"""
    print("\n" + "="*60)
    print(f"2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID (GET /submitData/{pass_id}/)")
    print("="*60)
    
    try:
        response = requests.get(f"{SUBMIT_DATA_URL}{pass_id}/")
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        response_data = response.json()
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {response_data.get('title', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
        print(f"–°—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {response_data.get('status', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
        print(f"Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response_data.get('user', {}).get('email', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
        
        if response.status_code == 200:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False

def test_get_passes_by_email():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email"""
    print("\n" + "="*60)
    print("3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (GET /submitData/?user__email=test@example.com)")
    print("="*60)
    
    try:
        email = "test@example.com"
        response = requests.get(f"{SUBMIT_DATA_URL}?user__email={email}")
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        response_data = response.json()
        
        if response.status_code == 200:
            print(f"–ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ–≤–∞–ª–æ–≤: {len(response_data)}")
            if response_data:
                for pass_item in response_data:
                    print(f"- ID: {pass_item.get('id', '–ù–µ—Ç')}, –ù–∞–∑–≤–∞–Ω–∏–µ: {pass_item.get('title', '–ù–µ—Ç')}")
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ email —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ email")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False

def test_patch_pass(pass_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞"""
    print("\n" + "="*60)
    print(f"4. –¢–µ—Å—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞ (PATCH /submitData/{pass_id}/)")
    print("="*60)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö)
    update_data = {
        "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª",
        "other_titles": "–ù–æ–≤–æ–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        "coords": {
            "latitude": 45.9999,
            "longitude": 7.9999, 
            "height": 2000
        }
    }
    
    try:
        response = requests.patch(
            f"{SUBMIT_DATA_URL}{pass_id}/",
            json=update_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        response_data = response.json()
        print(f"–û—Ç–≤–µ—Ç: {response_data}")
        
        if response.status_code == 200 and response_data.get('state') == 1:
            print("‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False

def test_patch_forbidden_fields(pass_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π"""
    print("\n" + "="*60)
    print("5. –¢–µ—Å—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("="*60)
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    forbidden_update = {
        "title": "–ï—â–µ –æ–¥–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
        "user": {
            "email": "new@example.com",  # –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
            "fam": "–ù–æ–≤–∞—è —Ñ–∞–º–∏–ª–∏—è",     # –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
            "name": "–ù–æ–≤–æ–µ –∏–º—è",        # –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
            "otc": "–ù–æ–≤–æ–µ –æ—Ç—á–µ—Å—Ç–≤–æ",    # –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
            "phone": "+7 999 999 99 99" # –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å
        }
    }
    
    try:
        response = requests.patch(
            f"{SUBMIT_DATA_URL}{pass_id}/",
            json=forbidden_update,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        response_data = response.json()
        print(f"–û—Ç–≤–µ—Ç: {response_data}")
        
        if response.status_code == 400 and response_data.get('state') == 0:
            print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - —ç—Ç–æ –æ—à–∏–±–∫–∞!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤—ã—Ö API –º–µ—Ç–æ–¥–æ–≤ –≤—Ç–æ—Ä–æ–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞")
    print("="*60)
    
    # –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    if not wait_for_server():
        exit(1)
    
    results = []
    
    # 1. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª
    pass_id = test_create_pass()
    results.append(pass_id is not None)
    
    if pass_id:
        # 2. –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–∞–ª –ø–æ ID
        results.append(test_get_pass_by_id(pass_id))
        
        # 3. –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
        results.append(test_get_passes_by_email())
        
        # 4. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–∞–ª
        results.append(test_patch_pass(pass_id))
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
        results.append(test_patch_forbidden_fields(pass_id))
    else:
        print("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞")
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("="*60)
    
    test_names = [
        "POST /submitData/ (—Å–æ–∑–¥–∞–Ω–∏–µ)",
        "GET /submitData/<id>/ (–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ ID)",
        "GET /submitData/?user__email=<email> (–ø–æ email)",
        "PATCH /submitData/<id>/ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)",
        "PATCH –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π"
    ]
    
    for i, (test_name, result) in enumerate(zip(test_names, results)):
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ù–ï –ü–†–û–ô–î–ï–ù"
        print(f"{i+1}. {test_name}: {status}")
    
    success_count = sum(results)
    total_count = len(results)
    
    print("\n" + "="*60)
    if success_count == total_count:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ API –º–µ—Ç–æ–¥—ã –≤—Ç–æ—Ä–æ–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print(f"‚ö†Ô∏è –ü–†–û–ô–î–ï–ù–û {success_count} –∏–∑ {total_count} —Ç–µ—Å—Ç–æ–≤")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
    print("="*60) 