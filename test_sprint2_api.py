#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö API –º–µ—Ç–æ–¥–æ–≤ —Å–ø—Ä–∏–Ω—Ç–∞ 2
"""

import requests
import json


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
API_URL = f"{BASE_URL}/submitData"


def test_get_pass_by_id(pass_id):
    """–¢–µ—Å—Ç GET /submitData/<id> - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID"""
    print(f"\n=== –¢–µ—Å—Ç GET /submitData/{pass_id} ===")
    
    url = f"{API_URL}/{pass_id}/"
    response = requests.get(url)
    
    print(f"URL: {url}")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    
    return response


def test_patch_pass(pass_id, update_data):
    """–¢–µ—Å—Ç PATCH /submitData/<id> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞"""
    print(f"\n=== –¢–µ—Å—Ç PATCH /submitData/{pass_id} ===")
    
    url = f"{API_URL}/{pass_id}/"
    headers = {'Content-Type': 'application/json'}
    
    response = requests.patch(url, json=update_data, headers=headers)
    
    print(f"URL: {url}")
    print(f"Update Data: {json.dumps(update_data, indent=2, ensure_ascii=False)}")
    print(f"Status Code: {response.status_code}")
    print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    
    return response


def test_get_passes_by_user_email(email):
    """–¢–µ—Å—Ç GET /submitData/?user__email=<email> - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\n=== –¢–µ—Å—Ç GET /submitData/?user__email={email} ===")
    
    url = f"{API_URL}/"
    params = {'user__email': email}
    
    response = requests.get(url, params=params)
    
    print(f"URL: {url}?user__email={email}")
    print(f"Status Code: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ–≤–∞–ª–æ–≤: {len(data)}")
        for i, pass_item in enumerate(data):
            print(f"  {i+1}. ID: {pass_item.get('id', 'N/A')}, –ù–∞–∑–≤–∞–Ω–∏–µ: {pass_item.get('title', 'N/A')}, –°—Ç–∞—Ç—É—Å: {pass_item.get('status', 'N/A')}")
    else:
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    
    return response


def test_create_pass():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–∞–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n=== –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–∞–ª–∞ ===")
    
    test_data = {
        "beauty_title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª",
        "title": "–ü–µ—Ä–µ–≤–∞–ª –¢–µ—Å—Ç–æ–≤—ã–π",
        "other_titles": "Test Pass",
        "connect": "–°–æ–µ–¥–∏–Ω—è–µ—Ç –¥–æ–ª–∏–Ω—É –ê —Å –¥–æ–ª–∏–Ω–æ–π –ë",
        "user": {
            "email": "test@example.com",
            "fam": "–¢–µ—Å—Ç–æ–≤",
            "name": "–¢–µ—Å—Ç",
            "otc": "–¢–µ—Å—Ç–æ–≤–∏—á",
            "phone": "+7-900-000-00-00"
        },
        "coords": {
            "latitude": "45.3842",
            "longitude": "7.1729",
            "height": 2574
        },
        "level": {
            "winter": "1–ê",
            "summer": "–Ω/–∫",
            "autumn": "1–ê",
            "spring": "1–ê"
        },
        "images": [
            {
                "data": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
                "title": "–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
            }
        ]
    }
    
    headers = {'Content-Type': 'application/json'}
    response = requests.post(API_URL + "/", json=test_data, headers=headers)
    
    print(f"Status Code: {response.status_code}")
    print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    
    return response


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –º–µ—Ç–æ–¥–æ–≤ —Å–ø—Ä–∏–Ω—Ç–∞ 2")
    print("=" * 50)
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª
        create_response = test_create_pass()
        
        if create_response.status_code == 200:
            pass_id = create_response.json().get('id')
            print(f"\n‚úÖ –ü–µ—Ä–µ–≤–∞–ª —Å–æ–∑–¥–∞–Ω —Å ID: {pass_id}")
            
            # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ –ø–æ ID
            test_get_pass_by_id(pass_id)
            
            # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞
            update_data = {
                "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–∞–ª",
                "beauty_title": "–ö—Ä–∞—Å–∏–≤—ã–π –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–∞–ª",
                "coords": {
                    "latitude": "45.4000",
                    "longitude": "7.2000", 
                    "height": 2600
                }
            }
            test_patch_pass(pass_id, update_data)
            
            # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_get_passes_by_user_email("test@example.com")
            
            # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–º–∏ –ø–æ–ª—è–º–∏
            forbidden_update = {
                "user": {
                    "email": "new@example.com",  # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å email
                    "fam": "–ù–æ–≤—ã–π"  # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é
                }
            }
            print("\n=== –¢–µ—Å—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ===")
            test_patch_pass(pass_id, forbidden_update)
            
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª: {create_response.json()}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    main() 