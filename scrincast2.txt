Сейчас с помощью твоего REST API туристы могут добавлять данные о новых перевалах в базу данных ФСТР.

Далее тебе понадобится реализовать новые возможности для пользователей:
Редактировать отправленные на сервер данные об объекте, если они в статусе new.
Редактировать можно все поля, кроме тех, что содержат в себе ФИО, адрес почты и номер телефона. Если поле status имеет значение, отличное от new, редактировать данные об объекте нельзя.
Просматривать статус модерации для объекта.
Просматривать все объекты, когда-либо отправленные на сервер самим пользователем, а также их статусы.
А ещё тебе нужно опубликовать своё решение в облаке (это задание будет дополнительным).

Задача 1. Добавление новых методов для REST API
Добавь в свой REST API ещё три метода:
GET /submitData/<id> — получить одну запись (перевал) по её id.
Выведи всю информацию об объекте, в том числе статус модерации.
PATCH /submitData/<id> — отредактировать существующую запись (замена), если она в статусе new.
Редактировать можно все поля, кроме тех, что содержат в себе ФИО, адрес почты и номер телефона. Метод принимает тот же самый json, который принимал уже реализованный тобой метод submitData.

В качестве результата верни два значения:
state:
1 — если успешно удалось отредактировать запись в базе данных.
0 — в противном случае.
message — если обновить запись не удалось, напиши почему.
GET /submitData/?user__email=<email> — список данных обо всех объектах, которые пользователь с почтой <email> отправил на сервер.
Дополнительная задача «со звёздочкой». Публикация своего решения на хостинге
Это задание «со звёздочкой», так как на данном курсе вы ещё не проходили работу с хостингами.
За него стоит взяться, если у тебя осталось время и ты готов самостоятельно разобраться с новой темой.
 

Задеплой свой API на любом доступном тебе хостинге.
Удобнее всего это сделать с помощью сервиса Yandex Cloud, который предоставляет бесплатный приветственный грант.

Кстати, посмотри на критерии оценивания:

Обязательные задания:

Создан класс по работе с БД — 10 баллов.
Реализован REST API (Спринт 1) — 15 баллов.
Реализован REST API (Спринт 2) — 15 баллов.
Написана документация в Readme.md (Спринт 3) — 5 баллов.
Хорошее качество кода (соблюдение code style) — 5 баллов.
Дополнительные задания:

Путь к базе данных берётся из переменных окружения операционной системы: FSTR_DB_HOST, FSTR_DB_PORT, FSTR_LOGIN, FSTR_PASS (Спринт 1) — 5 баллов.
Переработана структура базы данных (Спринт 1) — 10 баллов.
REST API опубликован на хостинге (Спринт 2) — 10 баллов.
Документация сделана с помощью Swagger (Спринт 3) — 5 баллов.
Код покрыт тестами (Спринт 3) — 5 баллов.
Правильная работа с Git-ом — 5 баллов:
Для новой фичи создана отдельная ветка.
Каждый коммит имеет понятный комментарий.
Коммиты делаются достаточно часто (а не только, когда фича сделана целиком).
Ветка слита в master после того, как фича реализована.
Проверь свой код, так как, возможно, на данном этапе тебе захочется что-то доработать.

В следующем спринте ты завершишь работу над своим REST API и отправишь всю работу на проверку ментору.